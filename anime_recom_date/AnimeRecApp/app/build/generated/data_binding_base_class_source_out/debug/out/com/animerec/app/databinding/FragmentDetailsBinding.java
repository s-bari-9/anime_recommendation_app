// Generated by view binder compiler. Do not edit!
package com.animerec.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RatingBar;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.animerec.app.R;
import com.google.android.material.chip.ChipGroup;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDetailsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ImageView coverImageView;

  @NonNull
  public final TextView errorTextView;

  @NonNull
  public final ChipGroup genresChipGroup;

  @NonNull
  public final TextView genresLabel;

  @NonNull
  public final View gradientOverlay;

  @NonNull
  public final ProgressBar loadingIndicator;

  @NonNull
  public final TextView ratingTextView;

  @NonNull
  public final TextView similarContentLabel;

  @NonNull
  public final RecyclerView similarContentRecyclerView;

  @NonNull
  public final TextView synopsisLabel;

  @NonNull
  public final TextView synopsisTextView;

  @NonNull
  public final TextView titleTextView;

  @NonNull
  public final TextView typeAndStatusTextView;

  @NonNull
  public final RatingBar userRatingBar;

  @NonNull
  public final Button watchStatusButton;

  @NonNull
  public final Button watchTrailerButton;

  @NonNull
  public final TextView yourRatingLabel;

  private FragmentDetailsBinding(@NonNull ScrollView rootView, @NonNull ImageView coverImageView,
      @NonNull TextView errorTextView, @NonNull ChipGroup genresChipGroup,
      @NonNull TextView genresLabel, @NonNull View gradientOverlay,
      @NonNull ProgressBar loadingIndicator, @NonNull TextView ratingTextView,
      @NonNull TextView similarContentLabel, @NonNull RecyclerView similarContentRecyclerView,
      @NonNull TextView synopsisLabel, @NonNull TextView synopsisTextView,
      @NonNull TextView titleTextView, @NonNull TextView typeAndStatusTextView,
      @NonNull RatingBar userRatingBar, @NonNull Button watchStatusButton,
      @NonNull Button watchTrailerButton, @NonNull TextView yourRatingLabel) {
    this.rootView = rootView;
    this.coverImageView = coverImageView;
    this.errorTextView = errorTextView;
    this.genresChipGroup = genresChipGroup;
    this.genresLabel = genresLabel;
    this.gradientOverlay = gradientOverlay;
    this.loadingIndicator = loadingIndicator;
    this.ratingTextView = ratingTextView;
    this.similarContentLabel = similarContentLabel;
    this.similarContentRecyclerView = similarContentRecyclerView;
    this.synopsisLabel = synopsisLabel;
    this.synopsisTextView = synopsisTextView;
    this.titleTextView = titleTextView;
    this.typeAndStatusTextView = typeAndStatusTextView;
    this.userRatingBar = userRatingBar;
    this.watchStatusButton = watchStatusButton;
    this.watchTrailerButton = watchTrailerButton;
    this.yourRatingLabel = yourRatingLabel;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.coverImageView;
      ImageView coverImageView = ViewBindings.findChildViewById(rootView, id);
      if (coverImageView == null) {
        break missingId;
      }

      id = R.id.errorTextView;
      TextView errorTextView = ViewBindings.findChildViewById(rootView, id);
      if (errorTextView == null) {
        break missingId;
      }

      id = R.id.genresChipGroup;
      ChipGroup genresChipGroup = ViewBindings.findChildViewById(rootView, id);
      if (genresChipGroup == null) {
        break missingId;
      }

      id = R.id.genresLabel;
      TextView genresLabel = ViewBindings.findChildViewById(rootView, id);
      if (genresLabel == null) {
        break missingId;
      }

      id = R.id.gradientOverlay;
      View gradientOverlay = ViewBindings.findChildViewById(rootView, id);
      if (gradientOverlay == null) {
        break missingId;
      }

      id = R.id.loadingIndicator;
      ProgressBar loadingIndicator = ViewBindings.findChildViewById(rootView, id);
      if (loadingIndicator == null) {
        break missingId;
      }

      id = R.id.ratingTextView;
      TextView ratingTextView = ViewBindings.findChildViewById(rootView, id);
      if (ratingTextView == null) {
        break missingId;
      }

      id = R.id.similarContentLabel;
      TextView similarContentLabel = ViewBindings.findChildViewById(rootView, id);
      if (similarContentLabel == null) {
        break missingId;
      }

      id = R.id.similarContentRecyclerView;
      RecyclerView similarContentRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (similarContentRecyclerView == null) {
        break missingId;
      }

      id = R.id.synopsisLabel;
      TextView synopsisLabel = ViewBindings.findChildViewById(rootView, id);
      if (synopsisLabel == null) {
        break missingId;
      }

      id = R.id.synopsisTextView;
      TextView synopsisTextView = ViewBindings.findChildViewById(rootView, id);
      if (synopsisTextView == null) {
        break missingId;
      }

      id = R.id.titleTextView;
      TextView titleTextView = ViewBindings.findChildViewById(rootView, id);
      if (titleTextView == null) {
        break missingId;
      }

      id = R.id.typeAndStatusTextView;
      TextView typeAndStatusTextView = ViewBindings.findChildViewById(rootView, id);
      if (typeAndStatusTextView == null) {
        break missingId;
      }

      id = R.id.userRatingBar;
      RatingBar userRatingBar = ViewBindings.findChildViewById(rootView, id);
      if (userRatingBar == null) {
        break missingId;
      }

      id = R.id.watchStatusButton;
      Button watchStatusButton = ViewBindings.findChildViewById(rootView, id);
      if (watchStatusButton == null) {
        break missingId;
      }

      id = R.id.watchTrailerButton;
      Button watchTrailerButton = ViewBindings.findChildViewById(rootView, id);
      if (watchTrailerButton == null) {
        break missingId;
      }

      id = R.id.yourRatingLabel;
      TextView yourRatingLabel = ViewBindings.findChildViewById(rootView, id);
      if (yourRatingLabel == null) {
        break missingId;
      }

      return new FragmentDetailsBinding((ScrollView) rootView, coverImageView, errorTextView,
          genresChipGroup, genresLabel, gradientOverlay, loadingIndicator, ratingTextView,
          similarContentLabel, similarContentRecyclerView, synopsisLabel, synopsisTextView,
          titleTextView, typeAndStatusTextView, userRatingBar, watchStatusButton,
          watchTrailerButton, yourRatingLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
